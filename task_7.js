/*7. *Сравнить null и 0. Попробуйте объяснить результат. */
function comparison() {
    var a = null > 0; // false
    var b = null < 0; // false
    var c = null >= 0; // true
    var d = null <= 0; // true
    var d1 = '' <= 0; // true
    var d2 = '' >= 0; // true
    var e = null == 0; // false
    var f = typeof 0; // number
    var g = typeof null; // object
}

/* В соответствии с приведенными в результатах скрипта выражениями видно, следующее:
a) При сравнении "null > 0" и "null < 0" играет роль то, что оба эти значения не являются ни Boolean, ни String, ни Undefined.
Значит, при проверке больше или меньше, оба значения приводятся к типу данных Number, т.е. "0" остается тем типом данных, которым он и является,
 а "null" преобразуется в Number со значением "+0" путем "+null". Выводится результат "false" потому, что "0" не может быть не больше и не меньше "+0".
б). Значения "null" и "0" являются разными типами данных, что при проверке их равенства (в том числе и строгого) возвращает значение "false".
в). При рассмотрении выражений типа "<="" и ">=", возвращающих значение "true", видно что в данном случае "null" принимается как некое отсутствующее значение,
 которое может быть как больше или равно "0", так и меньше или равно "0". То есть, пустая ячейка памяти со значением " " или "null" может быть заполнена любым значением, что делает выражением истинным по сути.*/

